{"version":3,"sources":["constants/bookConstants.js","constants/cartConstans.js","constants/userConstants.js","constants/orderConstans.js","store/store.js","reducers/bookReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/searchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Book.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/bookActions.js","components/BookCarousel.js","screens/HomeScreen.js","screens/BookScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/BookListScreen.js","screens/BookEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["BOOK_LIST_REQUEST","BOOK_LIST_SUCCESS","BOOK_LIST_FAIL","BOOK_DETAILS_REQUEST","BOOK_DETAILS_SUCCESS","BOOK_DETAILS_FAIL","BOOK_DELETE_REQUEST","BOOK_DELETE_SUCCESS","BOOK_DELETE_FAIL","BOOK_ADD_REQUEST","BOOK_ADD_SUCCESS","BOOK_ADD_FAIL","BOOK_ADD_RESET","BOOK_UPDATE_REQUEST","BOOK_UPDATE_SUCCESS","BOOK_UPDATE_FAIL","BOOK_UPDATE_RESET","BOOK_CREATE_REVIEW_REQUEST","BOOK_CREATE_REVIEW_SUCCESS","BOOK_CREATE_REVIEW_FAIL","BOOK_CREATE_REVIEW_RESET","BOOK_TOP_REQUEST","BOOK_TOP_SUCCESS","BOOK_TOP_FAIL","BOOKS_BY_AUTH_REQUEST","BOOKS_BY_AUTH_SUCCESS","BOOKS_BY_AUTH_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","bookList","state","books","action","type","loading","payload","page","pages","error","listBooksByAuthor","bookDetails","book","reviews","bookDelete","success","bookAdd","bookUpdate","bookReviewCreate","bookTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Book","Card","height","_id","Img","src","image","Body","Title","author","auth","index","arr","length","Text","as","rating","numReviews","price","Loader","Spinner","animation","role","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","actPage","active","listBooks","listBookDetails","BookCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","authorId","params","bookListByAuthor","bookListByAuthorError","bookListByAuthorLoading","booksByAuthor","search","sm","md","lg","xl","BookScreen","qty","setQty","setRating","comment","setComment","successBookReview","loadingBookReview","errorBookReview","ListGroup","description","pagesNum","countInStock","xs","disabled","review","createdAt","substring","bookId","post","Group","Label","controlId","row","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","quantity","window","paypal","script","document","createElement","async","onload","body","appendChild","addPaypalScript","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","BookListScreen","loadingDelete","errorDelete","loadingAdd","errorAdd","successAdd","addedBook","deleteBook","genre","BookEditScreen","setDescription","setPrice","setImage","setCountInStock","setPagesNum","ISBN","setISBN","setAuthor","setGenre","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateBook","rows","File","custom","OrderListScreen","App","path","component","exact","PaymentScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b14d8ca6.chunk.js","sourcesContent":["export const BOOK_LIST_REQUEST = 'BOOK_LIST_REQUEST';\nexport const BOOK_LIST_SUCCESS = 'BOOK_LIST_SUCCESS';\nexport const BOOK_LIST_FAIL = 'BOOK_LIST_FAIL';\n\n\nexport const BOOK_DETAILS_REQUEST = 'BOOK_DETAILS_REQUEST';\nexport const BOOK_DETAILS_SUCCESS = 'BOOK_DETAILS_SUCCESS';\nexport const BOOK_DETAILS_FAIL = 'BOOK_DETAILS_FAIL';\n\nexport const BOOK_DELETE_REQUEST = 'BOOK_DELETE_REQUEST';\nexport const BOOK_DELETE_SUCCESS = 'BOOK_DELETE_SUCCESS';\nexport const BOOK_DELETE_FAIL = 'BOOK_DELETE_FAIL';\n\nexport const BOOK_ADD_REQUEST = 'BOOK_ADD_REQUEST';\nexport const BOOK_ADD_SUCCESS = 'BOOK_ADD_SUCCESS';\nexport const BOOK_ADD_FAIL = 'BOOK_ADD_FAIL';\nexport const BOOK_ADD_RESET = 'BOOK_ADD_RESET';\n\nexport const BOOK_UPDATE_REQUEST = 'BOOK_UPDATE_REQUEST';\nexport const BOOK_UPDATE_SUCCESS = 'BOOK_UPDATE_SUCCESS';\nexport const BOOK_UPDATE_FAIL = 'BOOK_UPDATE_FAIL';\nexport const BOOK_UPDATE_RESET = 'BOOK_UPDATE_RESET';\n\nexport const BOOK_CREATE_REVIEW_REQUEST = 'BOOK_CREATE_REVIEW_REQUEST';\nexport const BOOK_CREATE_REVIEW_SUCCESS = 'BOOK_CREATE_REVIEW_SUCCESS';\nexport const BOOK_CREATE_REVIEW_FAIL = 'BOOK_CREATE_REVIEW_FAIL';\nexport const BOOK_CREATE_REVIEW_RESET = 'BOOK_CREATE_REVIEW_RESET';\n\nexport const BOOK_TOP_REQUEST = 'BOOK_TOP_REQUEST';\nexport const BOOK_TOP_SUCCESS = 'BOOK_TOP_SUCCESS';\nexport const BOOK_TOP_FAIL = 'BOOK_TOP_FAIL';\n\nexport const BOOKS_BY_AUTH_REQUEST = 'BOOKS_BY_AUTH_REQUEST';\nexport const BOOKS_BY_AUTH_SUCCESS = 'BOOKS_BY_AUTH_SUCCESS';\nexport const BOOKS_BY_AUTH_FAIL = 'BOOKS_BY_AUTH_FAIL';","export const CART_ADD_ITEM = 'CARD_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CARD_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport thunk from 'redux-thunk';\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport {\n    bookListReducer,\n    bookDetailsReducer,\n    bookDeleteReducer,\n    bookAddReducer,\n    bookUpdateReducer, bookReviewCreateReducer, bookTopRatedReducer, listBooksByAuthorReducer\n} from \"../reducers/bookReducers\";\nimport {cartReducer} from \"../reducers/cartReducers\";\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer\n} from \"../reducers/userReducers\";\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer,\n    orderListReducer, orderDeliverReducer\n} from \"../reducers/orderReducers\";\n\nconst reducer = combineReducers({\n    bookList: bookListReducer,\n    listBooksByAuthor: listBooksByAuthorReducer,\n    bookDetails: bookDetailsReducer,\n    bookDelete: bookDeleteReducer,\n    bookAdd: bookAddReducer,\n    bookUpdate: bookUpdateReducer,\n    bookReviewCreate: bookReviewCreateReducer,\n    bookTopRated: bookTopRatedReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer\n})\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: {userInfo: userInfoFromStorage},\n}\n\nconst middleware = [thunk]\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\nexport default store;","import {\n    BOOK_LIST_REQUEST,\n    BOOK_LIST_SUCCESS,\n    BOOK_LIST_FAIL,\n    BOOK_DETAILS_REQUEST,\n    BOOK_DETAILS_SUCCESS,\n    BOOK_DETAILS_FAIL,\n    BOOK_DELETE_REQUEST,\n    BOOK_DELETE_SUCCESS,\n    BOOK_DELETE_FAIL,\n    BOOK_ADD_REQUEST,\n    BOOK_ADD_SUCCESS,\n    BOOK_ADD_FAIL,\n    BOOK_ADD_RESET,\n    BOOK_UPDATE_REQUEST,\n    BOOK_UPDATE_SUCCESS,\n    BOOK_UPDATE_FAIL,\n    BOOK_UPDATE_RESET,\n    BOOK_CREATE_REVIEW_REQUEST,\n    BOOK_CREATE_REVIEW_SUCCESS,\n    BOOK_CREATE_REVIEW_FAIL,\n    BOOK_CREATE_REVIEW_RESET,\n    BOOK_TOP_REQUEST,\n    BOOK_TOP_SUCCESS,\n    BOOK_TOP_FAIL, BOOKS_BY_AUTH_REQUEST, BOOKS_BY_AUTH_SUCCESS, BOOKS_BY_AUTH_FAIL\n} from \"../constants/bookConstants\";\n\nexport const bookListReducer =\n    (state = {books: []}, action) => {\n        switch (action.type) {\n            case BOOK_LIST_REQUEST:\n                return {loading: true, books: []}\n            case BOOK_LIST_SUCCESS:\n                return {\n                    loading: false,\n                    books: action.payload.books,\n                    page: action.payload.page,\n                    pages: action.payload.pages\n                }\n            case BOOK_LIST_FAIL:\n                return {loading: false, error: action.payload}\n            default:\n                return state\n        }\n    }\n\nexport const bookDetailsReducer =\n    (state = {book: {reviews: []}}, action) => {\n        switch (action.type) {\n            case BOOK_DETAILS_REQUEST:\n                return {loading: true, ...state}\n            case BOOK_DETAILS_SUCCESS:\n                return {loading: false, book: action.payload}\n            case BOOK_DETAILS_FAIL:\n                return {loading: false, error: action.payload}\n            default:\n                return state\n        }\n    }\n\nexport const bookDeleteReducer =\n    (state = {}, action) => {\n        switch (action.type) {\n            case BOOK_DELETE_REQUEST:\n                return {loading: true,}\n            case BOOK_DELETE_SUCCESS:\n                return {loading: false, success: true}\n            case BOOK_DELETE_FAIL:\n                return {loading: false, error: action.payload}\n            default:\n                return state\n        }\n    }\nexport const bookAddReducer =\n    (state = {}, action) => {\n        switch (action.type) {\n            case BOOK_ADD_REQUEST:\n                return {loading: true,}\n            case BOOK_ADD_SUCCESS:\n                return {loading: false, success: true, book: action.payload}\n            case BOOK_ADD_FAIL:\n                return {loading: false, error: action.payload}\n            case BOOK_ADD_RESET:\n                return {}\n            default:\n                return state\n        }\n    }\nexport const bookUpdateReducer =\n    (state = {book: {}}, action) => {\n        switch (action.type) {\n            case BOOK_UPDATE_REQUEST:\n                return {loading: true,}\n            case BOOK_UPDATE_SUCCESS:\n                return {loading: false, success: true, book: action.payload}\n            case BOOK_UPDATE_FAIL:\n                return {loading: false, error: action.payload}\n            case BOOK_UPDATE_RESET:\n                return {book: {}}\n            default:\n                return state\n        }\n    }\n\nexport const bookReviewCreateReducer =\n    (state = {}, action) => {\n        switch (action.type) {\n            case BOOK_CREATE_REVIEW_REQUEST:\n                return {loading: true,}\n            case BOOK_CREATE_REVIEW_SUCCESS:\n                return {loading: false, success: true,}\n            case BOOK_CREATE_REVIEW_FAIL:\n                return {loading: false, error: action.payload}\n            case BOOK_CREATE_REVIEW_RESET:\n                return {}\n            default:\n                return state\n        }\n    }\n\nexport const bookTopRatedReducer =\n    (state = {books: []}, action) => {\n        switch (action.type) {\n            case BOOK_TOP_REQUEST:\n                return {loading: true, books: []}\n            case BOOK_TOP_SUCCESS:\n                return {loading: false, books: action.payload,}\n            case BOOK_TOP_FAIL:\n                return {loading: false, error: action.payload}\n            default:\n                return state\n        }\n    }\nexport const listBooksByAuthorReducer =\n    (state = {books: []}, action) => {\n        switch (action.type) {\n            case BOOKS_BY_AUTH_REQUEST:\n                return {loading: true, books: []}\n            case BOOKS_BY_AUTH_SUCCESS:\n                return {loading: false, books: action.payload,}\n            case BOOKS_BY_AUTH_FAIL:\n                return {loading: false, error: action.payload}\n            default:\n                return state\n        }\n    }","import {CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n    CART_CLEAR_ITEMS\n} from \"../constants/cartConstans\";\n\n\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {}}, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.book === item.book)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x =>\n                        x.book === existItem.book ? item : x)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.book !== action.payload)\n            }\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        default:\n            return state\n    }\n}\n","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET\n} from '../constants/userConstants'\n\n\nexport const userLoginReducer =\n    (state = {}, action) => {\n        switch (action.type) {\n            case USER_LOGIN_REQUEST:\n                return {loading: true}\n            case USER_LOGIN_SUCCESS:\n                return {loading: false, userInfo: action.payload}\n            case USER_LOGIN_FAIL:\n                return {loading: false, error: action.payload}\n            case USER_LOGOUT:\n                return {}\n            default:\n                return state\n        }\n    }\nexport const userRegisterReducer =\n    (state = {}, action) => {\n        switch (action.type) {\n            case USER_REGISTER_REQUEST:\n                return {loading: true}\n            case USER_REGISTER_SUCCESS:\n                return {loading: false, userInfo: action.payload}\n            case USER_REGISTER_FAIL:\n                return {loading: false, error: action.payload}\n            case USER_LOGOUT:\n                return {}\n            default:\n                return state\n        }\n    }\n\nexport const userDetailsReducer =\n    (state = {user: {}}, action) => {\n        switch (action.type) {\n            case USER_DETAILS_REQUEST:\n                return {...state, loading: true}\n            case USER_DETAILS_SUCCESS:\n                return {loading: false, user: action.payload}\n            case USER_DETAILS_FAIL:\n                return {loading: false, error: action.payload}\n            case USER_DETAILS_RESET:\n                return {\n                    user: {}\n                }\n            default:\n                return state\n        }\n    }\n\nexport const userUpdateProfileReducer =\n    (state = {}, action) => {\n        switch (action.type) {\n            case USER_UPDATE_PROFILE_REQUEST:\n                return {loading: true}\n            case USER_UPDATE_PROFILE_SUCCESS:\n                return {loading: false, success: true, user: action.payload}\n            case USER_UPDATE_PROFILE_FAIL:\n                return {loading: false, error: action.payload}\n            case USER_UPDATE_PROFILE_RESET:\n                return {}\n            default:\n                return state\n        }\n    }\nexport const userListReducer =\n    (state = {users: []}, action) => {\n        switch (action.type) {\n            case USER_LIST_REQUEST:\n                return {loading: true}\n            case USER_LIST_SUCCESS:\n                return {loading: false, users: action.payload}\n            case USER_LIST_FAIL:\n                return {loading: false, error: action.payload}\n            case USER_LIST_RESET:\n                return { users: [] }\n            default:\n                return state\n        }\n    }\nexport const userDeleteReducer = (state = {}, action) => {\n        switch (action.type) {\n            case USER_DELETE_REQUEST:\n                return {loading: true}\n            case USER_DELETE_SUCCESS:\n                return {loading: false, success: true}\n            case USER_DELETE_FAIL:\n                return {loading: false, error: action.payload}\n            default:\n                return state\n        }\n    }\n\nexport const userUpdateReducer = (state = {user:{}}, action) => {\n        switch (action.type) {\n            case USER_UPDATE_REQUEST:\n                return {loading: true}\n            case USER_UPDATE_SUCCESS:\n                return {loading: false, success: true}\n            case USER_UPDATE_FAIL:\n                return {loading: false, error: action.payload}\n            case USER_UPDATE_RESET:\n                return { user: {} }\n            default:\n                return state\n        }\n    }","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_RESET,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET\n} from \"../constants/orderConstans\";\nimport {act} from \"@testing-library/react\";\n\n\nexport const orderCreateReducer = (state={}, action) => {\n    switch(action.type){\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n            case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n            case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n            case ORDER_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderDetailsReducer = (state={loading: true, orderItems:[], shippingAddress:{}}, action) => {\n    switch(action.type){\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n            case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n            case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderPayReducer = (state={}, action) => {\n    switch(action.type){\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n            case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n            case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n            case ORDER_PAY_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const orderListMyReducer = (state={orders:[]}, action) => {\n    switch(action.type){\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n            case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n            case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n            case ORDER_LIST_MY_RESET:\n            return {orders:[]}\n        default:\n            return state\n    }\n}\n\nexport const orderListReducer = (state={orders:[]}, action) => {\n    switch(action.type){\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n            case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n            case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport const orderDeliverReducer = (state={}, action) => {\n    switch(action.type){\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n            case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n            case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n            case ORDER_DELIVER_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n","import axios from \"axios\";\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n    USER_DETAILS_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n} from '../constants/userConstants'\nimport {BOOK_LIST_FAIL} from \"../constants/bookConstants\";\nimport {ORDER_LIST_MY_RESET} from \"../constants/orderConstans\";\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/login/',\n            {'username': email, 'password': password}, config\n        )\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({type: USER_LOGOUT})\n    dispatch({type: USER_DETAILS_RESET})\n    dispatch({type: ORDER_LIST_MY_RESET})\n    dispatch({type: USER_LIST_RESET})\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            '/api/users/register/',\n            {'name': name, 'email': email, 'password': password}, config\n        )\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: {userInfo},\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: {userInfo},\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: {userInfo},\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/users/`,\n            config\n        )\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: {userInfo},\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: {userInfo},\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React, {useState} from 'react'\nimport {Button, Form} from \"react-bootstrap\";\nimport {useHistory} from 'react-router-dom'\n\nfunction SearchBox() {\n    const [keyword, setKeyword] = useState('')\n    let history = useHistory()\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type='text'\n                name='q'\n                onChange={(e) => setKeyword(e.target.value)}\n                className='mr-sm-2 ml-sm-5'\n            ></Form.Control>\n            <Button\n                type='submit'\n                variant='outline-success'\n                className='p-2'\n            >Submit</Button>\n        </Form>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Navbar, Nav, Container, Row, NavDropdown} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {logout} from \"../actions/userActions\";\nimport SearchBox from \"./searchBox\";\n\nfunction Header() {\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n    const dispatch = useDispatch()\n\n\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>YourBook</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <SearchBox/>\n                        <Nav className=\"ml-auto\">\n                            <LinkContainer to='/cart'>\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown id={userInfo.name} title={userInfo.name}>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                                </NavDropdown>\n                            ) : (\n                                <LinkContainer to=\"/login\">\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                </LinkContainer>\n                            )}\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown id='adminmenu' title='Admin'>\n                                    <LinkContainer to='/admin/userslist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/books'>\n                                        <NavDropdown.Item>Books</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to='/admin/orderslist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">\n                        Copyright &copy; YourBook\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\n\nfunction Rating({value, text, color}) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{color}}\n                   className={\n                       value >= 1\n                           ? 'fas fa-star'\n                           : value >= 0.5\n                           ? 'fas fa-start-half-alt'\n                           : 'far fa-star'}>\n                </i>\n            </span>\n            <span>\n                <i style={{color}}\n                   className={\n                       value >= 2\n                           ? 'fas fa-star'\n                           : value >= 1.5\n                           ? 'fas fa-start-half-alt'\n                           : 'far fa-star'}>\n                </i>\n            </span>\n            <span>\n                <i style={{color}}\n                   className={\n                       value >= 3\n                           ? 'fas fa-star'\n                           : value >= 2.5\n                           ? 'fas fa-start-half-alt'\n                           : 'far fa-star'}>\n                </i>\n            </span>\n            <span>\n                <i style={{color}}\n                   className={\n                       value >= 4\n                           ? 'fas fa-star'\n                           : value >= 3.5\n                           ? 'fas fa-start-half-alt'\n                           : 'far fa-star'}>\n                </i>\n            </span>\n            <span>\n                <i style={{color}}\n                   className={\n                       value >= 5\n                           ? 'fas fa-star'\n                           : value >= 4.5\n                           ? 'fas fa-start-half-alt'\n                           : 'far fa-star'}>\n                </i>\n            </span>\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nexport default Rating;","import React from 'react';\nimport {Card} from 'react-bootstrap';\nimport Rating from './Rating'\nimport {Link} from 'react-router-dom'\n\nfunction Book({book}) {\n    return (\n        <Card className=\"my-3 p-3 rounded\" style={{height: '570px'}}>\n            <Link to={`/books/${book._id}`}>\n                <Card.Img src={book.image}/>\n            </Link>\n            <Card.Body>\n                <Link to={`/books/${book._id}`}>\n                    <Card.Title>\n                        <strong>{book.name}</strong>\n                    </Card.Title>\n                </Link>\n                    {book.author && book.author.map((auth, index, arr) => {\n                        return (<Link to={`/books/author/${auth.id}/`}>\n                            {index === arr.length-1 ? auth.name : `${auth.name}, `}\n                        </Link>)\n                    })\n                    }\n                <Card.Text as=\"div\">\n                    <div className=\"my-3\">\n                        <Rating value={book.rating} text={`${book.numReviews} reviews`} color={'#f8e825'}/>\n                    </div>\n                </Card.Text>\n                <Card.Text as=\"h3\">\n                    ${book.price}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Book;","import React from \"react\";\nimport {Spinner} from \"react-bootstrap\";\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation=\"border\"\n            role=\"status\"\n            style={{\n                height: \"100px\",\n                width: \"100px\",\n                margin: \"auto\",\n                display: \"block\"\n            }}>\n        <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    )\n}\nexport default Loader;","import React from 'react'\nimport { Alert } from \"react-bootstrap\";\n\nfunction Message({variant, children}) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\nexport default Message;","import React from 'react'\nimport {Pagination} from 'react-bootstrap'\nimport {LinkContainer} from 'react-router-bootstrap'\n\nfunction Paginate({pages, page, keyword = '', isAdmin = false}) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n    return (\n        pages > 1 && (\n            <Pagination>\n                {[...Array(pages).keys()].map((actPage) => (\n                    <LinkContainer\n                        key={actPage + 1}\n                        to={!isAdmin ? `/?keyword=${keyword}&page=${actPage + 1}`\n                            : `/admin/books/?keyword=${keyword}&page=${actPage + 1}`\n                        }\n                    >\n                        <Pagination.Item active={actPage + 1 === page}>{actPage + 1}</Pagination.Item>\n                    </LinkContainer>\n                ))}\n            </Pagination>\n        )\n    )\n}\n\nexport default Paginate;","import axios from \"axios\";\nimport {\n    BOOK_LIST_REQUEST,\n    BOOK_LIST_SUCCESS,\n    BOOK_LIST_FAIL,\n    BOOK_DETAILS_REQUEST,\n    BOOK_DETAILS_SUCCESS,\n    BOOK_DETAILS_FAIL,\n    BOOK_DELETE_REQUEST,\n    BOOK_DELETE_SUCCESS,\n    BOOK_DELETE_FAIL,\n    BOOK_ADD_REQUEST,\n    BOOK_ADD_SUCCESS,\n    BOOK_ADD_FAIL,\n    BOOK_ADD_RESET,\n    BOOK_UPDATE_REQUEST,\n    BOOK_UPDATE_SUCCESS,\n    BOOK_UPDATE_FAIL,\n    BOOK_CREATE_REVIEW_REQUEST,\n    BOOK_CREATE_REVIEW_SUCCESS,\n    BOOK_CREATE_REVIEW_FAIL,\n    BOOK_TOP_REQUEST,\n    BOOK_TOP_SUCCESS,\n    BOOK_TOP_FAIL, BOOKS_BY_AUTH_REQUEST, BOOKS_BY_AUTH_SUCCESS, BOOKS_BY_AUTH_FAIL,\n} from \"../constants/bookConstants\";\nimport {ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS} from \"../constants/orderConstans\";\n\nexport const listBooks = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({type: BOOK_LIST_REQUEST})\n        const {data} = await axios.get(`/api/books${keyword}`);\n        dispatch({\n            type: BOOK_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: BOOK_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopBooks = () => async (dispatch) => {\n    try {\n        dispatch({type: BOOK_TOP_REQUEST})\n        const {data} = await axios.get(`/api/books/top/`);\n        dispatch({\n            type: BOOK_TOP_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: BOOK_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listBookDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({type: BOOK_DETAILS_REQUEST})\n        const {data} = await axios.get(`/api/books/${id}`);\n        dispatch({\n            type: BOOK_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: BOOK_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deleteBook = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOOK_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: {userInfo},\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.delete(\n            `/api/books/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: BOOK_DELETE_SUCCESS,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: BOOK_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const addBook = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOOK_ADD_REQUEST\n        })\n\n        const {\n            userLogin: {userInfo},\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.post(\n            `/api/books/add/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: BOOK_ADD_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: BOOK_ADD_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateBook = (book) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOOK_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: {userInfo},\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.put(\n            `/api/books/update/${book._id}/`,\n            book,\n            config\n        )\n\n        dispatch({\n            type: BOOK_UPDATE_SUCCESS,\n            payload: data,\n        })\n        dispatch({type: BOOK_DETAILS_SUCCESS, payload: data})\n\n    } catch (error) {\n        dispatch({\n            type: BOOK_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const createBookReview = (bookId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: BOOK_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: {userInfo},\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.post(\n            `/api/books/${bookId}/reviews/`,\n            review,\n            config\n        )\n\n        dispatch({\n            type: BOOK_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: BOOK_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listBooksByAuthor = (id) => async (dispatch) => {\n    try {\n        dispatch({type: BOOKS_BY_AUTH_REQUEST})\n        const {data} = await axios.get(`/api/books/author/${id}/`);\n        dispatch({\n            type: BOOKS_BY_AUTH_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: BOOKS_BY_AUTH_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Link} from 'react-router-dom'\nimport {Carousel, Image} from \"react-bootstrap\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport {listTopBooks} from \"../actions/bookActions\";\n\nfunction BookCarousel() {\n    const dispatch = useDispatch()\n    const bookTopRated = useSelector(state => state.bookTopRated)\n    const {error, loading, books} = bookTopRated\n\n    useEffect(() => {\n        dispatch(listTopBooks())\n    }, [dispatch])\n\n    return (loading ? <Loader />\n        : error\n            ? <Message variant='danger'>{error}</Message>\n            : (\n                <Carousel pause='hover' className='bg-dark'>\n                    {books.map(book => (\n                        <Carousel.Item key={book._id}>\n                            <Link to={`/book/${book._id}`}>\n                                <Image src={book.image} alt={book.name} fluid />\n                                <Carousel.Caption className='carousel.caption'>\n                                    <h4>{book.name} (${book.price})</h4>\n                                </Carousel.Caption>\n                            </Link>\n                        </Carousel.Item>\n                    ))}\n                </Carousel>\n            )\n\n    )\n}\n\nexport default BookCarousel;","import React, {useState, useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Row, Col} from 'react-bootstrap';\nimport Book from '../components/Book'\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport {listBooks, listBooksByAuthor} from \"../actions/bookActions\";\nimport BookCarousel from \"../components/BookCarousel\";\n\nfunction HomeScreen({history, match}) {\n    const authorId = match.params.id\n    const dispatch = useDispatch()\n\n    const bookListByAuthor = useSelector(state => state.listBooksByAuthor)\n    const {error: bookListByAuthorError, loading: bookListByAuthorLoading, books: booksByAuthor} = bookListByAuthor\n\n    const bookList = useSelector(state => state.bookList)\n    const {error, loading, books, page, pages} = bookList\n    let keyword = history.location.search\n    useEffect(() => {\n            if (match.params.id) {\n                dispatch(listBooksByAuthor(match.params.id))\n            } else {\n                dispatch(listBooks(keyword))\n            }\n        },\n        [dispatch, keyword, authorId])\n    return (\n        <div>\n            {!authorId && !keyword && <BookCarousel/>}\n            {authorId ? <div>\n                    {bookListByAuthorLoading ? <Loader/>\n                        : bookListByAuthorError ? <Message variant=\"danger\">{error}</Message>\n                            :\n                            <div>\n\n                                <Row>\n                                    {booksByAuthor.map(book => (\n                                        <Col key={book._id} sm={12} md={6} lg={4} xl={3}>\n                                            <Book book={book}/>\n                                        </Col>\n                                    ))}\n                                </Row>\n                            </div>\n                    }\n\n                </div> :\n\n                <div>\n\n                    <h1>Latest Books</h1>\n                    {loading ? <Loader/>\n                        : error ? <Message variant=\"danger\">{error}</Message>\n                            :\n                            <div>\n\n                                <Row>\n                                    {books.map(book => (\n                                        <Col key={book._id} sm={12} md={6} lg={4} xl={3}>\n                                            <Book book={book}/>\n                                        </Col>\n                                    ))}\n                                </Row>\n                                <Paginate page={page} pages={pages} keyword={keyword}/>\n                            </div>\n                    }\n\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default HomeScreen;","import React, {useState, useEffect} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {Row, Col, Image, ListGroup, Button, Card, Form} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {listBookDetails, createBookReview} from \"../actions/bookActions\";\nimport {BOOK_CREATE_REVIEW_RESET} from \"../constants/bookConstants\";\n\nfunction BookScreen({match, history}) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    const bookDetails = useSelector(state => state.bookDetails)\n    const {loading, error, book} = bookDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const bookReviewCreate = useSelector(state => state.bookReviewCreate)\n    const {success: successBookReview, loading: loadingBookReview, error: errorBookReview} = bookReviewCreate\n    useEffect(() => {\n            if (successBookReview) {\n                setRating(0)\n                setComment('')\n                dispatch({type: BOOK_CREATE_REVIEW_RESET})\n            }\n            dispatch(listBookDetails(match.params.id))\n\n        },\n        [dispatch, match, successBookReview])\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createBookReview(\n            match.params.id, {\n                rating,\n                comment\n            }\n        ))\n    }\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go back</Link>\n            {loading ? <Loader/>\n                : error ? <Message variant=\"danger\">{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={book.image} alt={book.name} fluid/>\n                                </Col>\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{book.name}</h3>\n                                            {book.author && book.author.map((auth, index, arr) => {\n                                                return (<Link to={`/books/author/${auth.id}`}>\n                                                    {index === arr.length - 1 ? auth.name : `${auth.name},`}\n                                                </Link>)\n                                            })\n                                            }\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            <Rating value={book.rating} text={`${book.numReviews} reviews`}\n                                                    color={\"#f8e825\"}/>\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            Price: ${book.price}\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            {book.description}\n                                        </ListGroup.Item>\n                                        <ListGroup.Item>\n                                            Number of pages: {book.pagesNum}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant=\"flush\">\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price: </Col>\n                                                    <Col><strong>${book.price}</strong></Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status: </Col>\n                                                    <Col>{book.countInStock > 0 ? 'In stock' : 'Out of Stock'}</Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            {book.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Quantity</Col>\n                                                        <Col xs='auto' className=\"my-1\">\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n                                                                    [...Array(book.countInStock).keys()].map((x) =>\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>)\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={book.countInStock == 0}\n                                                    type='button'>\n                                                    Add\n                                                    to\n                                                    Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={6} className=\"mt-5\">\n                                    <h4>Reviews</h4>\n                                    {book.reviews.length === 0 && <Message variant=\"info\">No Reviews</Message>}\n                                    <ListGroup variant=\"flush\">\n                                        {book.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825'/>\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n                                            {loadingBookReview && <Loader/>}\n                                            {successBookReview && <Message variant='success'>Review submitted</Message>}\n                                            {errorBookReview && <Message variant='danger'>{errorBookReview}</Message>}\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control as=\"select\"\n                                                                      value={rating}\n                                                                      onChange={\n                                                                          (e) => setRating(e.target.value)\n                                                                      }>\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excelent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}>\n                                                        </Form.Control>\n                                                    </Form.Group>\n                                                    <Button\n                                                        disabled={loadingBookReview}\n                                                        type='submit'\n                                                        variant='primary'\n\n                                                    >Submit</Button>\n                                                </Form>\n                                            ) : (\n                                                <Message variant=\"info\">\n                                                    Please <Link to='/login'>Login</Link> to write a review.\n                                                </Message>\n                                            )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n            }\n        </div>\n    )\n}\n\nexport default BookScreen;\n","import axios from \"axios\";\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n} from \"../constants/cartConstans\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const {data} = await axios.get(`/api/books/${id}`)\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            book: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n    localStorage.setItem(('cartItems'), JSON.stringify((getState().cart.cartItems)))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n\n","import React, {useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from \"react-bootstrap\";\nimport Message from '../components/Message'\nimport {addToCart, removeFromCart} from \"../actions/cartActions\";\n\n\nfunction CartScreen({match, location, history}) {\n    const bookId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n    const {cartItems} = cart\n\n    useEffect(() => {\n        if (bookId) {\n            dispatch(addToCart(bookId, qty))\n        }\n    }, [dispatch, bookId, qty])\n\n    const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n    }\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item => (\n                            <ListGroup.Item key={item.book}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded/>\n                                    </Col>\n                                    <Col md={3}>\n                                        <Link to={`/books/${item.book}`}>{item.name}</Link>\n                                    </Col>\n                                    <Col md={2}>\n                                        ${item.price}\n                                    </Col>\n                                    <Col md={3}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            value={item.qty}\n                                            onChange={(e) => dispatch(addToCart(item.book, Number(e.target.value)))}\n                                        >\n                                            {\n                                                [...Array(item.countInStock).keys()].map((x) =>\n                                                    <option key={x + 1} value={x + 1}>\n                                                        {x + 1}\n                                                    </option>)\n                                            }\n\n                                        </Form.Control>\n                                    </Col>\n                                    <Col md={1}>\n                                        <Button onClick={() =>removeFromCartHandler(item.book)}\n                                        type=\"button\"\n                                        variant=\"light\">\n                                            <i className=\"fas fa-trash\"></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + Number(item.qty), 0)}) items</h2>\n                            ${cartItems.reduce((acc, item) => acc + Number(item.qty) * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n                    <ListGroup.Item>\n                        <Button\n                        type=\"button\"\n                        className=\"btn-block\"\n                        disabled={cartItems.length === 0}\n                        onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                        </Button>\n                    </ListGroup.Item>\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen;","import React from \"react\";\nimport {Container, Row, Col} from \"react-bootstrap\";\n\nfunction FormContainer({children}) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default FormContainer","import React, {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Form, Button, Row, Col} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport {login} from \"../actions/userActions\";\n\n\nfunction LoginScreen({location, history}) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1]: '/'\n    const userLogin = useSelector((state) => state.userLogin)\n    const {error, loading, userInfo} = userLogin\n    useEffect(() => {\n        if(userInfo){\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n    return (\n        <FormContainer>\n            <h1>Sign in</h1>\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader/>}\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Adress</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n\n                    </Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n\n            </Form>\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                    Register\n                </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen;","import React, {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Form, Button, Row, Col} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport {register} from \"../actions/userActions\";\n\n\nfunction RegisterScreen({location, history}) {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n    const userRegister = useSelector((state) => state.userRegister)\n    const {error, loading, userInfo} = userRegister\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n        dispatch(register(name, email, password))\n        }\n    }\n    return (\n        <FormContainer>\n            <h1>Sign in</h1>\n            {message && <Message variant=\"danger\">{message}</Message>}\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader/>}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Adress</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n\n                    </Form.Control>\n\n\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm passowrd'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n\n                    </Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                    Sign in\n                </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { listMyOrders } from '../actions/orderActions';\n\nfunction ProfileScreen({ history }) {\n\tconst [ name, setName ] = useState('');\n\tconst [ email, setEmail ] = useState('');\n\tconst [ password, setPassword ] = useState('');\n\tconst [ confirmPassword, setConfirmPassword ] = useState('');\n\tconst [ message, setMessage ] = useState('');\n\n\tconst dispatch = useDispatch();\n\n\tconst userDetails = useSelector((state) => state.userDetails);\n\tconst { error, loading, user } = userDetails;\n\n\tconst userLogin = useSelector((state) => state.userLogin);\n\tconst { userInfo } = userLogin;\n\n\tconst userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n\tconst { success } = userUpdateProfile;\n\n\tconst orderListMy = useSelector((state) => state.orderListMy);\n\tconst { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (!userInfo) {\n\t\t\t\thistory.push('/login');\n\t\t\t} else {\n\t\t\t\tif (!user || !user.name || success || userInfo.id !== user._id) {\n\t\t\t\t\tdispatch({ type: USER_UPDATE_PROFILE_RESET });\n\t\t\t\t\tdispatch(getUserDetails('profile'));\n\t\t\t\t\tdispatch(listMyOrders());\n\t\t\t\t} else {\n\t\t\t\t\tsetName(user.name);\n\t\t\t\t\tsetEmail(user.email);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[ history, userInfo, user, success ]\n\t);\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tif (password !== confirmPassword) {\n\t\t\tsetMessage('Passwords do not match');\n\t\t} else {\n\t\t\tdispatch(\n\t\t\t\tupdateUserProfile({\n\t\t\t\t\tid: user._id,\n\t\t\t\t\tname: name,\n\t\t\t\t\temail: email,\n\t\t\t\t\tpassword: password\n\t\t\t\t})\n\t\t\t);\n\t\t\tsetMessage('');\n\t\t}\n\t};\n\treturn (\n\t\t<Row>\n\t\t\t<Col md={3}>\n\t\t\t\t<h2>User Profile</h2>\n\t\t\t\t{message && <Message variant=\"danger\">{message}</Message>}\n\t\t\t\t{error && <Message variant=\"danger\">{error}</Message>}\n\t\t\t\t{loading && <Loader />}\n\t\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t\t<Form.Group controlId=\"name\">\n\t\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\ttype=\"name\"\n\t\t\t\t\t\t\tplaceholder=\"Enter name\"\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group controlId=\"email\">\n\t\t\t\t\t\t<Form.Label>Email Adress</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tplaceholder=\"Enter email\"\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group controlId=\"password\">\n\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Form.Group controlId=\"passwordConfirm\">\n\t\t\t\t\t\t<Form.Label>Confirm password</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Confirm passowrd\"\n\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\n\t\t\t\t\t\tUpdate\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Col>\n\t\t\t<Col md={9}>\n\t\t\t\t<h2>My orders</h2>\n\t\t\t\t{loadingOrders ? (\n\t\t\t\t\t<Loader />\n\t\t\t\t) : errorOrders ? (\n\t\t\t\t\t<Message variant=\"danger\">{errorOrders}</Message>\n\t\t\t\t) : (\n\t\t\t\t\t<Table striped responsive className=\"table-sm\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>ID</th>\n\t\t\t\t\t\t\t\t<th>DATE</th>\n\t\t\t\t\t\t\t\t<th>TOTAL</th>\n\t\t\t\t\t\t\t\t<th>Paid</th>\n\t\t\t\t\t\t\t\t<th>Delivered</th>\n\t\t\t\t\t\t\t\t<th>STATUS</th>\n\t\t\t\t\t\t\t\t<th />\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{orders.map((order) => (\n\t\t\t\t\t\t\t\t<tr key={order._id}>\n\t\t\t\t\t\t\t\t\t<td>{order._id}</td>\n\t\t\t\t\t\t\t\t\t<td>{order.createdAt.substring(0, 10)}</td>\n\t\t\t\t\t\t\t\t\t<td>${order.totalPrice}</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{order.isPaid ? (\n\t\t\t\t\t\t\t\t\t\t\torder.paidAt.substring(0, 10)\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\" style={{ color: 'red' }} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t{order.isDelivered ? (\n\t\t\t\t\t\t\t\t\t\t\torder.deliveredAt.substring(0, 10)\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\" style={{ color: 'red' }} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t<LinkContainer to={`/order/${order._id}`}>\n\t\t\t\t\t\t\t\t\t\t\t<Button className=\"btn-sm\">Details</Button>\n\t\t\t\t\t\t\t\t\t\t</LinkContainer>\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t)}\n\t\t\t</Col>\n\t\t</Row>\n\t);\n}\n\nexport default ProfileScreen;\n","\nimport axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_RESET,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_FAIL,\n    ORDER_LIST_SUCCESS,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL\n} from '../constants/orderConstans'\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstans\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n","import React from 'react';\nimport {Nav} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\n\n\nfunction CheckoutSteps({step1, step2, step3, step4}) {\n    return (\n        <Nav className='justify-contt-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Login</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Place order</Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps;","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen","import React, {useState} from 'react'\nimport {Form, Button, Col} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport {savePaymentMethod} from \"../actions/cartActions\";\n\nfunction ShippingScreen({history}) {\n    const cart = useSelector(state => state.cart)\n    const {shippingAddress} = cart\n    const dispatch = useDispatch()\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3/>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select method</Form.Label>\n                    <Col>\n                        <Form.Check type='radio'\n                                    label='Paypal or Credit Card'\n                                    id='paypal'\n                                    name='paymentMethod'\n                                    checked\n                                    onChange={(e) => setPaymentMethod(e.target.value)}>\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n                <Button type='submit' variant='primary'>Continue</Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen;","import React, {useState, useEffect} from 'react'\nimport {Button, Col, Row, ListGroup, Image, Card, ListGroupItem} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from \"../components/Message\";\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport {createOrder} from \"../actions/orderActions\";\nimport {ORDER_CREATE_RESET} from \"../constants/orderConstans\";\n\nfunction PlaceOrderScreen({history}) {\n    const orderCreate = useSelector(state => state.orderCreate)\n    const {order, error, success} = orderCreate\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = (0.08 * cart.itemsPrice).toFixed(2)\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice\n        }))\n    }\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4/>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\n                                {' '}\n                                {cart.shippingAddress.postalCode},\n                                {' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/books/${item.book}`}>{item.name}</Link>\n                                                </Col>\n                                                <Col>\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Item: </Col>\n                                    <Col>${cart.itemsPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping: </Col>\n                                    <Col>${cart.shippingPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax: </Col>\n                                    <Col>${cart.taxPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total: </Col>\n                                    <Col>${cart.totalPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >Place order</Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen","import React, {useState, useEffect} from 'react'\nimport {Button, Col, Row, ListGroup, Image, Card, ListGroupItem} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {getOrderDetails, payOrder, deliverOrder} from \"../actions/orderActions\";\nimport {PayPalButton} from \"react-paypal-button-v2\";\nimport {ORDER_PAY_RESET, ORDER_DELIVER_RESET} from \"../constants/orderConstans\";\n\nfunction OrderScreen({match, history}) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n    const [sdkReady, setSdkReady] = useState(false)\n    const orderDetails = useSelector(state => state.orderDetails)\n    const {order, error, loading} = orderDetails\n    const orderPay = useSelector(state => state.orderPay)\n    const {loading: loadingPay, success: successPay} = orderPay\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const {loading: loadingDeliver, success: successDeliver} = orderDeliver\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.quantity, 0).toFixed(2)\n    }\n    //\n    const addPaypalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = \"https://www.paypal.com/sdk/js?client-id=AerQSGoEFJKaZViegSmbolmitXX2r4M4QN5DiKWwlEBsENraMp6zx4r4N-or5Tnpo2MDkTfGC_xXaY1K\"\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n        if(!userInfo){\n            history.push('/login')\n        }\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({type: ORDER_PAY_RESET})\n            dispatch({type: ORDER_DELIVER_RESET})\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPaypalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n    return loading ? (<Loader/>\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <div>\n            <h1>ORder: {orderId}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <strong>Shipping: </strong>\n                            <p><strong>Name: </strong> {order.user.name}</p>\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                            </p>\n                            {order.shippingAddress.address}, {order.shippingAddress.city}\n                            {' '}\n                            {order.shippingAddress.postalCode},\n                            {' '}\n                            {order.shippingAddress.country}\n                            {order.isDelivered ? (\n                                <Message variant='success'>Delivered at {order.deliveredAt}</Message>\n                            ) : (\n                                <Message variant='warning'>Not delivered</Message>\n                            )}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {order.paymentMethod}\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\n                            ) : (\n                                <Message variant='warning'>Not paid</Message>\n                            )}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {order.orderItems.length === 0 ? <Message variant='info'>\n                                Your order is empty\n                            </Message> : (\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/books/${item.book}`}>{item.name}</Link>\n                                                </Col>\n                                                <Col>\n                                                    {item.quantity} X ${item.price} =\n                                                    ${(item.quantity * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Item: </Col>\n                                    <Col>${order.itemsPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping: </Col>\n                                    <Col>${order.shippingPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax: </Col>\n                                    <Col>${order.taxPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total: </Col>\n                                    <Col>${order.totalPrice} </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader/>}\n\n                                    {!sdkReady ? (\n                                        <Loader/>\n                                    ) : (\n                                        <PayPalButton\n                                            amount={order.totalPrice}\n                                            onSuccess={successPaymentHandler}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n                        </ListGroup>\n                        {loadingDeliver && <Loader/>}\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                            <ListGroup.Item>\n                                <Button\n                                    type=\"button\"\n                                    className=\"btn btn-block\"\n                                    onClick={deliverHandler}>\n                                    Mark As Delivered\n                                </Button>\n                            </ListGroup.Item>\n                        )}\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default OrderScreen;","import React, {useEffect, useState} from \"react\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Table, Button} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {listUsers, deleteUser} from \"../actions/userActions\";\nimport {Link} from \"react-router-dom\";\n\nfunction UserListScreen({history}) {\n    const dispatch = useDispatch()\n    const userList = useSelector(state => state.userList)\n    const {loading, error, users} = userList\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n    const userDelete = useSelector(state => state.userDelete)\n    const {success: successDelete} = userDelete\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin){\n        dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, successDelete, userInfo ])\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure that you want to delete this user?'))\n        {\n        dispatch(deleteUser(id))\n        }\n    }\n    return (\n    <div>\n        <h1>Users</h1>\n        {loading\n        ? <Loader/>\n        : error\n        ? (<Message variant=\"danger\">{error}</Message>)\n        : (\n            <Table striped bordered hover responsive className=\"table-sm\">\n                <thead>\n                <tr>\n\n                <th>ID</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>ADMIN</th>\n                <th></th>\n                </tr>\n                </thead>\n                <tbody>\n                {users.map(user =>(\n                    <tr key={user._id}>\n                        <td>{user._id}</td>\n                        <td>{user.name}</td>\n                        <td>{user.email}</td>\n                        <td>{user.isAdmin ? (\n                            <i className=\"fas fa-check\" style={{color: 'green'}}></i>\n                            ) :(\n                            <i className=\"fas fa-times\" style={{color: 'red'}}></i>\n                        )}</td>\n                        <td>\n                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                <Button variant='light' className='btn-sm'>\n                                    <i className=\"fas fa-edit\"></i>\n                                </Button>\n                            </LinkContainer>\n                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                    <i className=\"fas fa-trash\"></i>\n                                </Button>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </Table>\n                )}\n    </div>\n    )\n}\n\nexport default UserListScreen;","import React, {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport {getUserDetails, updateUser} from \"../actions/userActions\";\nimport {USER_UPDATE_RESET} from \"../constants/userConstants\";\n\nfunction UserEditScreen({match, history}) {\n    const userId = match.params.id\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector((state) => state.userDetails)\n    const {error, loading, user} = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const {error: errorUpdate, loading: loadingUpdate, success: successUpdate} = userUpdate\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({type: USER_UPDATE_RESET})\n            history.push('/admin/userslist')\n        } else {\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({_id: user._id, name, email, isAdmin}))\n\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userslist'>Go Back</Link>\n            <FormContainer>\n                <h1>Edit user</h1>\n                {loadingUpdate && <Loader/>}\n                {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='name'\n                                placeholder='Enter name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='email'>\n                            <Form.Label>Email Adress</Form.Label>\n                            <Form.Control\n\n                                type='email'\n                                placeholder='Enter email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n\n                            </Form.Control>\n\n\n                        </Form.Group>\n                        <Form.Group controlId='isAdmin'>\n                            <Form.Check\n                                type='checkbox'\n                                label='Is Admin'\n                                checked={isAdmin}\n                                onChange={(e) => setIsAdmin(e.target.checked)}\n                            >\n                            </Form.Check>\n                        </Form.Group>\n                        <Button type='submit' variant='primary'>\n                            Update\n                        </Button>\n                    </Form>\n                )}\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default UserEditScreen;\n","import React, {useEffect, useState} from \"react\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Table, Button, Row, Col, Card} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Paginate from \"../components/Paginate\";\nimport {listBooks, deleteBook, addBook} from \"../actions/bookActions\";\nimport {BOOK_ADD_RESET} from \"../constants/bookConstants\";\n\nfunction BookListScreen({history, match}) {\n\n    const dispatch = useDispatch()\n\n    const bookList = useSelector(state => state.bookList)\n    const {loading, error, books, pages, page} = bookList\n\n    const bookDelete = useSelector(state => state.bookDelete)\n    const {loading: loadingDelete, error: errorDelete, success: successDelete} = bookDelete\n\n    const bookAdd = useSelector(state => state.bookAdd)\n    const {loading: loadingAdd, error: errorAdd, success: successAdd, book: addedBook} = bookAdd\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({type: BOOK_ADD_RESET})\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n        if (successAdd) {\n            history.push(`/admin/book/${addedBook._id}/edit`)\n        } else {\n            dispatch(listBooks(keyword))\n        }\n    }, [dispatch, history, userInfo, successDelete, successAdd, addedBook, keyword])\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure that you want to delete this book?')) {\n            dispatch(deleteBook(id))\n        }\n    }\n    const addBookHandler = (book) => {\n        dispatch(addBook())\n    }\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Books</h1>\n                </Col>\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={addBookHandler}>\n                        <i className='fas fa-plus'></i> Add book\n                    </Button>\n                </Col>\n            </Row>\n            {loadingDelete && <Loader/>}\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n            {loadingAdd && <Loader/>}\n            {errorAdd && <Message variant=\"danger\">{errorAdd}</Message>}\n            {loading\n                ? <Loader/>\n                : error\n                    ? (<Message variant=\"danger\">{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className=\"table-sm\">\n                                <thead>\n                                <tr>\n\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>PRICE</th>\n                                    <th>GENRE</th>\n                                    <th>AUTHOR</th>\n                                    <th></th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {books.map(book => (\n                                    <tr key={book._id}>\n                                        <td>{book._id}</td>\n                                        <td>{book.name}</td>\n                                        <td>${book.price}</td>\n                                        <td>{book.genre}</td>\n                                        <td>{book.author && book.author.map(auth => `${auth.name},`)}</td>\n                                        <td>\n                                            <LinkContainer to={`/admin/book/${book._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className=\"fas fa-edit\"></i>\n                                                </Button>\n                                            </LinkContainer>\n                                            <Button variant='danger' className='btn-sm'\n                                                    onClick={() => deleteHandler(book._id)}>\n                                                <i className=\"fas fa-trash\"></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true}/>\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default BookListScreen;\n","import React, {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Form, Button} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport FormContainer from \"../components/FormContainer\";\nimport {listBookDetails, updateBook} from \"../actions/bookActions\";\nimport {BOOK_UPDATE_RESET} from \"../constants/bookConstants\";\nimport axios from \"axios\";\n\nfunction BookEditScreen({match, history}) {\n    const bookId = match.params.id\n    const [name, setName] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [pagesNum, setPagesNum] = useState('')\n    const [ISBN, setISBN] = useState(0)\n    const [author, setAuthor] = useState('')\n    const [genre, setGenre] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const bookDetails = useSelector(state => state.bookDetails)\n    const {error, loading, book} = bookDetails\n\n    const bookUpdate = useSelector(state => state.bookUpdate)\n    const {error: errorUpdate, loading: loadingUpdate, success: successUpdate} = bookUpdate\n\n\n    useEffect(() => {\n        if (successUpdate) {\n            dispatch({type: BOOK_UPDATE_RESET})\n            history.push('/admin/books/')\n        } else {\n            if (!book.name || book._id !== Number(bookId)) {\n                dispatch(listBookDetails(bookId))\n            } else {\n                setName(book.name)\n                setDescription(book.description)\n                setPrice(book.price)\n                setImage(book.image)\n                setCountInStock(book.countInStock)\n                setAuthor(book.author.name)\n                setGenre(book.genre)\n                setISBN(book.ISBN)\n                setPagesNum(book.pagesNum)\n            }\n        }\n    }, [dispatch, book, bookId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateBook({\n            _id: bookId,\n            name,\n            description,\n            price,\n            image,\n            countInStock,\n            author,\n            genre,\n            ISBN,\n            pagesNum\n        }))\n    }\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n        formData.append('book_id', bookId)\n        setUploading(true)\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n            const {data} = await axios.post('/api/books/upload/', formData, config)\n            setImage(data)\n            setUploading(false)\n                } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/books'>Go Back</Link>\n            <FormContainer>\n                <h1>Edit Book</h1>\n                {loadingUpdate && <Loader/>}\n                {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='name'\n                                placeholder='Enter name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='description'>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                as=\"textarea\"\n                                rows={5}\n                                type='text'\n                                placeholder='Enter description'\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                            >\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='price'>\n                            <Form.Label>Price</Form.Label>\n                            <Form.Control\n\n                                type='number'\n                                placeholder='Enter price'\n                                value={price}\n                                onChange={(e) => setPrice(e.target.value)}\n                            >\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='image'>\n                            <Form.Label>Image</Form.Label>\n                            <Form.Control\n\n                                type='text'\n                                placeholder='Enter image'\n                                value={image}\n                                onChange={(e) => setImage(e.target.value)}\n                            >\n\n                            </Form.Control>\n                            <Form.File\n                                id='image-fie'\n                                label='Choose file'\n                                custom\n                                onChange={uploadFileHandler}>\n                            </Form.File>\n                            {uploading && <Loader/>}\n                        </Form.Group>\n                        <Form.Group controlId='countInStock'>\n                            <Form.Label>Count in stock</Form.Label>\n                            <Form.Control\n\n                                type='number'\n                                placeholder='Enter count in stock'\n                                value={countInStock}\n                                onChange={(e) => setCountInStock(e.target.value)}\n                            >\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='author'>\n                            <Form.Label>Author</Form.Label>\n                            <Form.Control\n\n                                type='text'\n                                placeholder='Enter author'\n                                value={author}\n                                onChange={(e) => setAuthor(e.target.value)}\n                            >\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='genre'>\n                            <Form.Label>Genre</Form.Label>\n                            <Form.Control\n\n                                type='text'\n                                placeholder='Enter genre'\n                                value={genre}\n                                onChange={(e) => setGenre(e.target.value)}\n                            >\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='pagesNum'>\n                            <Form.Label>Number of pages</Form.Label>\n                            <Form.Control\n\n                                type='text'\n                                placeholder='Enter number of pages'\n                                value={pagesNum}\n                                onChange={(e) => setPagesNum(e.target.value)}\n                            >\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId='ISBN'>\n                            <Form.Label>Number of ISBN</Form.Label>\n                            <Form.Control\n\n                                type='text'\n                                placeholder='Enter ISBN'\n                                value={ISBN}\n                                onChange={(e) => setISBN(e.target.value)}\n                            >\n\n                            </Form.Control>\n                        </Form.Group>\n                        <Button type='submit' variant='primary'>\n                            Update\n                        </Button>\n                    </Form>\n                )}\n            </FormContainer>\n        </div>\n    )\n}\n\nexport default BookEditScreen;\n","import React, {useEffect, useState} from \"react\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {Table, Button} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { listOrders } from \"../actions/orderActions\";\n\n\nfunction OrderListScreen({history}) {\n    const dispatch = useDispatch()\n    const orderList = useSelector(state => state.orderList)\n    const {loading, error, orders} = orderList\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin){\n        dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo ])\n    return (\n    <div>\n        <h1>Orders</h1>\n        {loading\n        ? <Loader/>\n        : error\n        ? (<Message variant=\"danger\">{error}</Message>)\n        : (\n            <Table striped bordered hover responsive className=\"table-sm\">\n                <thead>\n                <tr>\n\n                <th>ID</th>\n                <th>USER</th>\n                <th>DATE</th>\n                <th>TOTAL PRICE</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n                </tr>\n                </thead>\n                <tbody>\n                {orders.map(order =>(\n                    <tr key={order._id}>\n                        <td>{order._id}</td>\n                        <td>{order.user && order.user.name}</td>\n                        <td>{order.createdAt.substring(0, 10)}</td>\n                        <td>{order.totalPrice}</td>\n                        <td>{order.isPaid ? (\n                            order.paidAt.substring(0, 10)\n                            ) :(\n                            <i className=\"fas fa-times\" style={{color: 'red'}}></i>\n                        )}</td>\n                        <td>{order.isDelivered ? (\n                            order.deliveredAt.substring(0, 10)\n                            ) :(\n                            <i className=\"fas fa-times\" style={{color: 'red'}}></i>\n                        )}</td>\n                        <td>\n                            <LinkContainer to={`/order/${order._id}`}>\n                                <Button variant='light' className='btn-sm'>\n                                    Details\n                                </Button>\n                            </LinkContainer>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </Table>\n                )}\n    </div>\n    )\n}\n\nexport default OrderListScreen;","import {Container} from 'react-bootstrap';\nimport {HashRouter as Router, Route} from \"react-router-dom\";\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport BookScreen from \"./screens/BookScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\"\nimport BookListScreen from \"./screens/BookListScreen\";\nimport BookEditScreen from \"./screens/BookEditScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nfunction App() {\n    return (\n        <Router>\n            <Header/>\n            <main className=\"py-3\">\n                <Container>\n                    <Route path='/' component={HomeScreen} exact/>\n                    <Route path='/books/:id' component={BookScreen} exact/>\n                    <Route path='/books/author/:id/' component={HomeScreen} exact/>\n                    <Route path='/cart/:id?' component={CartScreen}/>\n                    <Route path='/login' component={LoginScreen}/>\n                    <Route path='/register' component={RegisterScreen}/>\n                    <Route path='/profile' component={ProfileScreen}/>\n                    <Route path='/shipping' component={ShippingScreen}/>\n                    <Route path='/payment' component={PaymentScreen}/>\n                    <Route path='/placeorder' component={PlaceOrderScreen}/>\n                    <Route path='/order/:id' component={OrderScreen}/>\n                    <Route path='/admin/userslist' component={UserListScreen}/>\n                    <Route path='/admin/user/:id/edit' component={UserEditScreen}/>\n                    <Route path='/admin/books/' component={BookListScreen}/>\n                    <Route path='/admin/book/:id/edit' component={BookEditScreen}/>\n                    <Route path='/admin/orderslist/' component={OrderListScreen}/>\n                </Container>\n            </main>\n            <Footer/>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider } from 'react-redux';\nimport store from \"./store/store\";\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}